<?php

/**
 * @file
 * Contains entity_layout.module..
 */

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 * @param $route_name
 * @param RouteMatchInterface $route_match
 * @return string
 */
function entity_layout_help($route_name, RouteMatchInterface $route_match) {
  if ('help.page.entity_layout' === $route_name) {
    // Main module help for the entity_layout module.
    $output = '';
    $output .= '<h3>' . t('About') . '</h3>';
    $output .= '<p>' . t('Provide ability to contributors to set a custom entity layout on a per instance basis, using field items') . '</p>';

    return $output;
  }

  return null;
}

/**
 * Implements hook_entity_view_alter().
 *
 * @param array $build
 * @param EntityInterface $entity
 * @param EntityViewDisplayInterface $display
 */
function entity_layout_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  foreach($display->getComponents() as $name => $component) {
    if (
      false === array_key_exists('type', $component)
      || 'entity_layout_field_formatter' !== $component['type']
    ) {
      continue;
    }
    $build['#entity_layout'] = $name;
    // @todo: use a static method for pre_render
    $build['#pre_render'][] = '_entity_layout_pre_render';
  }
}

function _entity_layout_pre_render($build) {
  ksm($build);
  return $build;
}
